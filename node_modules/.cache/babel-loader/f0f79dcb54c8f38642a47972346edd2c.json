{"ast":null,"code":"var _jsxFileName = \"/home/luigr/repositories/recipes-app/src/components/Header.js\";\nimport PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport RecipesContext from '../contexts/RecipesContext';\nimport * as comidasApi from '../services/comidasApi';\nimport * as bebidasApi from '../services/bebidasApi';\nimport '../styles/searchIcon.css';\nimport '../styles/buttons.css';\nexport default function Header(_ref) {\n  let {\n    title,\n    showSearchIcon\n  } = _ref;\n  const [showSearchInput, setShowSearchInput] = useState(false);\n  const [selectedRadio, setSelectedRadio] = useState('');\n  const [inputTextValue, setInputTextValue] = useState('');\n  const history = useHistory();\n  const {\n    setMealsData,\n    setDrinksData\n  } = useContext(RecipesContext);\n\n  const toggleSearchInput = () => {\n    setShowSearchInput(!showSearchInput);\n  };\n\n  function Redirect(data) {\n    if (!data) {\n      const ALERT = 'Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.';\n      return global.alert(ALERT);\n    }\n\n    if (data.length === 1 && title === 'Comidas') {\n      return history.push(`/comidas/${data[0].idMeal}`);\n    }\n\n    if (data.length === 1 && title === 'Bebidas') {\n      return history.push(`/bebidas/${data[0].idDrink}`);\n    }\n  }\n\n  const getMealsData = async (string, category) => {\n    if (category === 'ingredient') {\n      const data = await comidasApi.fetchFoodByIngredients(string);\n      setMealsData(data);\n      Redirect(data);\n    } else if (category === 'name') {\n      const data = await comidasApi.fetchFoodByName(string);\n      setMealsData(data);\n      Redirect(data);\n    } else {\n      const data = await comidasApi.fetchFoodByLetter(string);\n      setMealsData(data);\n      Redirect(data);\n    }\n  };\n\n  const getDrinksData = async (string, category) => {\n    if (category === 'ingredient') {\n      const data = await bebidasApi.fetchDrinkByIngredients(string);\n      setDrinksData(data);\n      Redirect(data);\n    } else if (category === 'name') {\n      const data = await bebidasApi.fetchDrinkByName(string);\n      setDrinksData(data);\n      Redirect(data);\n    } else {\n      const data = await bebidasApi.fetchDrinkByLetter(string);\n      setDrinksData(data);\n      Redirect(data);\n    }\n  };\n\n  async function HandleClickSearch() {\n    const ONE = 1;\n\n    if (selectedRadio === 'first-letter' && inputTextValue.length > ONE) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n      return;\n    }\n\n    if (title === 'Comidas') {\n      await getMealsData(inputTextValue, selectedRadio);\n    }\n\n    if (title === 'Bebidas') {\n      getDrinksData(inputTextValue, selectedRadio);\n    }\n  }\n\n  function selectRadio(value) {\n    setSelectedRadio(value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/perfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/profileIcon.svg\",\n    alt: \"profile icon\",\n    \"data-testid\": \"profile-top-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, title), showSearchIcon && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: toggleSearchInput,\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"fas search_icon\",\n    src: \"/images/searchIcon.svg\",\n    alt: \"search icon\",\n    \"data-testid\": \"search-top-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }))), showSearchIcon && showSearchInput && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"search-input\",\n    value: inputTextValue,\n    onChange: _ref2 => {\n      let {\n        target\n      } = _ref2;\n      return setInputTextValue(target.value);\n    },\n    placeholder: \"Search..\",\n    className: \"search_input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Ingrediente\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"ingredient\",\n    name: \"filter-radio\",\n    value: \"ingredient\",\n    \"data-testid\": \"ingredient-search-radio\",\n    onChange: _ref3 => {\n      let {\n        target\n      } = _ref3;\n      return selectRadio(target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"name\",\n    name: \"filter-radio\",\n    value: \"name\",\n    \"data-testid\": \"name-search-radio\",\n    onChange: _ref4 => {\n      let {\n        target\n      } = _ref4;\n      return selectRadio(target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"first-letter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Primeira Letra\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"first-letter\",\n    name: \"filter-radio\",\n    value: \"first-letter\",\n    \"data-testid\": \"first-letter-search-radio\",\n    onChange: _ref5 => {\n      let {\n        target\n      } = _ref5;\n      return selectRadio(target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: HandleClickSearch,\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Buscar\")));\n}\nHeader.propTypes = {\n  showSearchIcon: PropTypes.bool,\n  title: PropTypes.string.isRequired\n};\nHeader.defaultProps = {\n  showSearchIcon: true\n};","map":{"version":3,"sources":["/home/luigr/repositories/recipes-app/src/components/Header.js"],"names":["PropTypes","React","useState","useContext","useHistory","Link","RecipesContext","comidasApi","bebidasApi","Header","title","showSearchIcon","showSearchInput","setShowSearchInput","selectedRadio","setSelectedRadio","inputTextValue","setInputTextValue","history","setMealsData","setDrinksData","toggleSearchInput","Redirect","data","ALERT","global","alert","length","push","idMeal","idDrink","getMealsData","string","category","fetchFoodByIngredients","fetchFoodByName","fetchFoodByLetter","getDrinksData","fetchDrinkByIngredients","fetchDrinkByName","fetchDrinkByLetter","HandleClickSearch","ONE","selectRadio","value","target","propTypes","bool","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport RecipesContext from '../contexts/RecipesContext';\nimport * as comidasApi from '../services/comidasApi';\nimport * as bebidasApi from '../services/bebidasApi';\nimport '../styles/searchIcon.css';\nimport '../styles/buttons.css';\n\nexport default function Header({ title, showSearchIcon }) {\n  const [showSearchInput, setShowSearchInput] = useState(false);\n  const [selectedRadio, setSelectedRadio] = useState('');\n  const [inputTextValue, setInputTextValue] = useState('');\n  const history = useHistory();\n\n  const {\n    setMealsData,\n    setDrinksData,\n  } = useContext(RecipesContext);\n\n  const toggleSearchInput = () => {\n    setShowSearchInput(!showSearchInput);\n  };\n\n  function Redirect(data) {\n    if (!data) {\n      const ALERT = 'Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.';\n      return global.alert(ALERT);\n    }\n    if (data.length === 1 && title === 'Comidas') {\n      return history.push(`/comidas/${data[0].idMeal}`);\n    }\n    if (data.length === 1 && title === 'Bebidas') {\n      return history.push(`/bebidas/${data[0].idDrink}`);\n    }\n  }\n\n  const getMealsData = async (string, category) => {\n    if (category === 'ingredient') {\n      const data = await comidasApi.fetchFoodByIngredients(string);\n      setMealsData(data);\n      Redirect(data);\n    } else if (category === 'name') {\n      const data = await comidasApi.fetchFoodByName(string);\n      setMealsData(data);\n      Redirect(data);\n    } else {\n      const data = await comidasApi.fetchFoodByLetter(string);\n      setMealsData(data);\n      Redirect(data);\n    }\n  };\n\n  const getDrinksData = async (string, category) => {\n    if (category === 'ingredient') {\n      const data = await bebidasApi.fetchDrinkByIngredients(string);\n      setDrinksData(data);\n      Redirect(data);\n    } else if (category === 'name') {\n      const data = await bebidasApi.fetchDrinkByName(string);\n      setDrinksData(data);\n      Redirect(data);\n    } else {\n      const data = await bebidasApi.fetchDrinkByLetter(string);\n      setDrinksData(data);\n      Redirect(data);\n    }\n  };\n\n  async function HandleClickSearch() {\n    const ONE = 1;\n    if (selectedRadio === 'first-letter' && inputTextValue.length > ONE) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n      return;\n    }\n    if (title === 'Comidas') {\n      await getMealsData(inputTextValue, selectedRadio);\n    }\n    if (title === 'Bebidas') {\n      getDrinksData(inputTextValue, selectedRadio);\n    }\n  }\n\n  function selectRadio(value) {\n    setSelectedRadio(value);\n  }\n\n  return (\n    <div>\n      <header>\n        <Link to=\"/perfil\">\n          <img\n            src=\"/images/profileIcon.svg\"\n            alt=\"profile icon\"\n            data-testid=\"profile-top-btn\"\n          />\n        </Link>\n        <h1 data-testid=\"page-title\">{ title }</h1>\n        {\n          showSearchIcon\n        && (\n          <button type=\"button\" onClick={ toggleSearchInput } className=\"btn\">\n            <img\n              className=\"fas search_icon\"\n              src=\"/images/searchIcon.svg\"\n              alt=\"search icon\"\n              data-testid=\"search-top-btn\"\n            />\n          </button>)\n        }\n      </header>\n      { showSearchIcon && showSearchInput\n      && (\n        <div className=\"form_bar\">\n          <input\n            type=\"text\"\n            data-testid=\"search-input\"\n            value={ inputTextValue }\n            onChange={ ({ target }) => setInputTextValue(target.value) }\n            placeholder=\"Search..\"\n            className=\"search_input\"\n          />\n          <label htmlFor=\"ingredient\">\n            Ingrediente\n            <input\n              type=\"radio\"\n              id=\"ingredient\"\n              name=\"filter-radio\"\n              value=\"ingredient\"\n              data-testid=\"ingredient-search-radio\"\n              onChange={ ({ target }) => selectRadio(target.value) }\n            />\n          </label>\n          <label htmlFor=\"name\">\n            Nome\n            <input\n              type=\"radio\"\n              id=\"name\"\n              name=\"filter-radio\"\n              value=\"name\"\n              data-testid=\"name-search-radio\"\n              onChange={ ({ target }) => selectRadio(target.value) }\n            />\n          </label>\n          <label htmlFor=\"first-letter\">\n            Primeira Letra\n            <input\n              type=\"radio\"\n              id=\"first-letter\"\n              name=\"filter-radio\"\n              value=\"first-letter\"\n              data-testid=\"first-letter-search-radio\"\n              onChange={ ({ target }) => selectRadio(target.value) }\n            />\n          </label>\n          <button\n            type=\"button\"\n            data-testid=\"exec-search-btn\"\n            onClick={ HandleClickSearch }\n            className=\"buttons\"\n          >\n            Buscar\n          </button>\n        </div>)}\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  showSearchIcon: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n};\n\nHeader.defaultProps = {\n  showSearchIcon: true,\n};\n"]},"metadata":{},"sourceType":"module"}