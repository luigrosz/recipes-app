{"ast":null,"code":"var _jsxFileName = \"/home/luigr/repositories/recipes-app/src/pages/DrinkById.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router';\nimport copy from 'clipboard-copy';\nimport RecommendedRecipes from '../components/RecommendedRecipes';\nimport { fetchRecommendedMeals } from '../services/comidasApi';\nconst {\n  log\n} = console;\n\nfunction handleFavoriteButtonClick(id, drink, favorite, setFavorite) {\n  const recipe = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: drink.strCategory,\n    alcoholicOrNot: drink.strAlcoholic,\n    name: drink.strDrink,\n    image: drink.strDrinkThumb\n  };\n\n  if (!JSON.parse(localStorage.getItem('favoriteRecipes')) || JSON.parse(localStorage.getItem('favoriteRecipes')) === 0) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([recipe]));\n  } else {\n    const favoriteFoods = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const alreadyFavorite = favoriteFoods.some(favoriteRecipe => favoriteRecipe.id === id);\n\n    if (alreadyFavorite) {\n      const newFavorites = favoriteFoods.filter(favoriteRecipe => favoriteRecipe.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    } else {\n      favoriteFoods.push(recipe);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteFoods));\n    }\n  }\n\n  if (favorite === true) {\n    return setFavorite(false);\n  }\n\n  setFavorite(true);\n}\n\nexport default function DrinkById(_ref) {\n  let {\n    match\n  } = _ref;\n  const {\n    drinkId: id\n  } = match.params;\n  const history = useHistory();\n  const location = useLocation();\n  const index = 0;\n  const [drink, setDrink] = useState({});\n  const [recommended, setRecommended] = useState([]);\n  const [alert, setAlert] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (favoriteRecipes !== null && favoriteRecipes.some(recipe => recipe.id === id)) {\n      setFavorite(true);\n    }\n  }, [id]);\n  const ingredients = Object.keys(drink).filter(ingredient => ingredient.includes('strIngredient')).map(ingredient => drink[ingredient]);\n  const measures = Object.keys(drink).filter(measure => measure.includes('strMeasure')).map(measure => drink[measure]);\n  useEffect(() => {\n    const fetchById = async () => {\n      try {\n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const json = await res.json();\n        const drinkRecipe = json.drinks[0];\n        setDrink(drinkRecipe);\n        return drinkRecipe;\n      } catch (error) {\n        console.log('ERRO DE REQUISIÇÃO', error);\n      }\n    };\n\n    async function fetchByRecommendedMeal() {\n      const recommendation = await fetchRecommendedMeals();\n      setRecommended(recommendation);\n    }\n\n    fetchById();\n    fetchByRecommendedMeal();\n  }, [id]);\n\n  function displayAlert() {\n    const THREE = 3000;\n    setTimeout(() => setAlert(false), THREE);\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 18\n      }\n    }, \"Link copiado!\"));\n  }\n\n  function putRecipeInStorage() {\n    const local = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    log(local);\n\n    if (!local) {\n      const object = {\n        cocktails: {\n          [id]: []\n        }\n      };\n      return localStorage.setItem('inProgressRecipes', JSON.stringify(object));\n    }\n\n    if (!local.cocktails) {\n      local.cocktails = {\n        [id]: []\n      };\n      return localStorage.setItem('inProgressRecipes', JSON.stringify(local));\n    }\n\n    local.cocktails[id] = [];\n    return localStorage.setItem('inProgressRecipes', JSON.stringify(local));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, drink.strCategory), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, drink.strAlcoholic), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, drink.strDrink), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    alt: drink.strDrink,\n    src: drink.strDrinkThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), ingredients.map((ingredient, i) => ingredient === '' || ingredient === null ? null : /*#__PURE__*/React.createElement(\"li\", {\n    key: `${ingredient}-${i}`,\n    \"data-testid\": `${i}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, `${ingredient} - ${measures[i]}`)), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, drink.strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"start-recipe\",\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: () => {\n      putRecipeInStorage();\n      history.push(`/bebidas/${id}/in-progress`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"Iniciar Receita\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: () => {\n      copy(`http://localhost:3000${location.pathname}`);\n      setAlert(true);\n    },\n    alt: \"share-content\",\n    \"data-testid\": \"share-btn\",\n    src: \"/images/shareIcon.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), alert && displayAlert(), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"favorite-btn\",\n    onClick: () => handleFavoriteButtonClick(id, drink, favorite, setFavorite),\n    alt: \"heart\",\n    src: favorite ? '/images/blackHeartIcon.svg' : '/images/whiteHeartIcon.svg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recommended-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RecommendedRecipes, {\n    index: index,\n    recommended: recommended,\n    type: \"drink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }))));\n}\nDrinkById.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      drinkId: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/luigr/repositories/recipes-app/src/pages/DrinkById.jsx"],"names":["React","useEffect","useState","PropTypes","useHistory","useLocation","copy","RecommendedRecipes","fetchRecommendedMeals","log","console","handleFavoriteButtonClick","id","drink","favorite","setFavorite","recipe","type","area","category","strCategory","alcoholicOrNot","strAlcoholic","name","strDrink","image","strDrinkThumb","JSON","parse","localStorage","getItem","setItem","stringify","favoriteFoods","alreadyFavorite","some","favoriteRecipe","newFavorites","filter","push","DrinkById","match","drinkId","params","history","location","index","setDrink","recommended","setRecommended","alert","setAlert","favoriteRecipes","ingredients","Object","keys","ingredient","includes","map","measures","measure","fetchById","res","fetch","json","drinkRecipe","drinks","error","fetchByRecommendedMeal","recommendation","displayAlert","THREE","setTimeout","putRecipeInStorage","local","object","cocktails","i","strInstructions","pathname","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router';\nimport copy from 'clipboard-copy';\nimport RecommendedRecipes from '../components/RecommendedRecipes';\nimport { fetchRecommendedMeals } from '../services/comidasApi';\n\nconst { log } = console;\nfunction handleFavoriteButtonClick(id, drink, favorite, setFavorite) {\n  const recipe = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: drink.strCategory,\n    alcoholicOrNot: drink.strAlcoholic,\n    name: drink.strDrink,\n    image: drink.strDrinkThumb };\n\n  if (!JSON.parse(localStorage.getItem('favoriteRecipes'))\n      || JSON.parse(localStorage.getItem('favoriteRecipes')) === 0) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([recipe]));\n  } else {\n    const favoriteFoods = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const alreadyFavorite = favoriteFoods.some(\n      (favoriteRecipe) => favoriteRecipe.id === id,\n    );\n    if (alreadyFavorite) {\n      const newFavorites = favoriteFoods.filter(\n        (favoriteRecipe) => favoriteRecipe.id !== id,\n      );\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    } else {\n      favoriteFoods.push(recipe);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteFoods));\n    }\n  }\n  if (favorite === true) {\n    return setFavorite(false);\n  }\n  setFavorite(true);\n}\nexport default function DrinkById({ match }) {\n  const { drinkId: id } = match.params;\n  const history = useHistory();\n  const location = useLocation();\n  const index = 0;\n  const [drink, setDrink] = useState({});\n  const [recommended, setRecommended] = useState([]);\n  const [alert, setAlert] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteRecipes !== null && favoriteRecipes.some((recipe) => recipe.id === id)) {\n      setFavorite(true);\n    }\n  }, [id]);\n\n  const ingredients = Object.keys(drink)\n    .filter((ingredient) => ingredient.includes('strIngredient'))\n    .map((ingredient) => drink[ingredient]);\n\n  const measures = Object.keys(drink)\n    .filter((measure) => measure.includes('strMeasure'))\n    .map((measure) => drink[measure]);\n\n  useEffect(() => {\n    const fetchById = async () => {\n      try {\n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const json = await res.json();\n        const drinkRecipe = json.drinks[0];\n        setDrink(drinkRecipe);\n        return drinkRecipe;\n      } catch (error) {\n        console.log('ERRO DE REQUISIÇÃO', error);\n      }\n    };\n\n    async function fetchByRecommendedMeal() {\n      const recommendation = await fetchRecommendedMeals();\n      setRecommended(recommendation);\n    }\n\n    fetchById();\n    fetchByRecommendedMeal();\n  }, [id]);\n\n  function displayAlert() {\n    const THREE = 3000;\n    setTimeout(() => setAlert(false), THREE);\n    return <span><i>Link copiado!</i></span>;\n  }\n  function putRecipeInStorage() {\n    const local = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    log(local);\n    if (!local) {\n      const object = { cocktails: { [id]: [] } };\n      return localStorage.setItem('inProgressRecipes', JSON.stringify(object));\n    }\n    if (!local.cocktails) {\n      local.cocktails = { [id]: [] };\n      return localStorage.setItem('inProgressRecipes', JSON.stringify(local));\n    }\n    local.cocktails[id] = [];\n    return localStorage.setItem('inProgressRecipes', JSON.stringify(local));\n  }\n\n  return (\n    <div className=\"page-container\">\n      <div>\n        <h2 data-testid=\"recipe-category\">{drink.strCategory}</h2>\n        <h2 data-testid=\"recipe-category\">{drink.strAlcoholic}</h2>\n        <h2 data-testid=\"recipe-title\">{drink.strDrink}</h2>\n        <img\n          data-testid=\"recipe-photo\"\n          alt={ drink.strDrink }\n          src={ drink.strDrinkThumb }\n        />\n        {ingredients.map((ingredient, i) => (\n          (ingredient === '' || ingredient === null)\n            ? null\n            : (\n              <li\n                key={ `${ingredient}-${i}` }\n                data-testid={ `${i}-ingredient-name-and-measure` }\n              >\n                {`${ingredient} - ${measures[i]}`}\n              </li>\n            )\n        ))}\n        <div data-testid=\"instructions\">{drink.strInstructions}</div>\n        <button\n          type=\"button\"\n          className=\"start-recipe\"\n          data-testid=\"start-recipe-btn\"\n          onClick={ () => {\n            putRecipeInStorage();\n            history.push(`/bebidas/${id}/in-progress`);\n          } }\n        >\n          Iniciar Receita\n        </button>\n        <input\n          type=\"image\"\n          onClick={ () => {\n            copy(`http://localhost:3000${location.pathname}`);\n            setAlert(true);\n          } }\n          alt=\"share-content\"\n          data-testid=\"share-btn\"\n          src=\"/images/shareIcon.svg\"\n        />\n        {alert && displayAlert()}\n        <input\n          type=\"image\"\n          data-testid=\"favorite-btn\"\n          onClick={ () => handleFavoriteButtonClick(id, drink, favorite, setFavorite) }\n          alt=\"heart\"\n          src={\n            favorite ? '/images/blackHeartIcon.svg' : '/images/whiteHeartIcon.svg'\n          }\n        />\n        <div className=\"recommended-container\">\n          <RecommendedRecipes index={ index } recommended={ recommended } type=\"drink\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nDrinkById.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      drinkId: PropTypes.string,\n    }),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}