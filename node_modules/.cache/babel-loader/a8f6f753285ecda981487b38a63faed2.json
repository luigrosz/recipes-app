{"ast":null,"code":"var _jsxFileName = \"/home/luigr/repositories/recipes-app/src/pages/DrinkByIdInProgress.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport '../styles/recommended.css';\nimport setInProgressRecipesLocalStorage from '../helpers/helpers';\n\nfunction handleFavoriteButtonClick(id, drink, favorite, setFavorite) {\n  const recipe = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: drink.strCategory,\n    alcoholicOrNot: drink.strAlcoholic,\n    name: drink.strDrink,\n    image: drink.strDrinkThumb\n  };\n\n  if (!JSON.parse(localStorage.getItem('favoriteRecipes')) || JSON.parse(localStorage.getItem('favoriteRecipes')) === 0) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([recipe]));\n  } else {\n    const favoriteDrink = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const alreadyFavorite = favoriteDrink.some(favoriteRecipe => favoriteRecipe.id === drink.idDrink);\n\n    if (alreadyFavorite) {\n      const newFavorites = favoriteDrink.filter(favoriteRecipe => favoriteRecipe.id !== drink.idDrink);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    } else {\n      favoriteDrink.push(recipe);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteDrink));\n    }\n  }\n\n  if (favorite === true) {\n    return setFavorite(false);\n  }\n\n  setFavorite(true);\n}\n\nfunction validateButton(setIsDisable) {\n  const checkboxInputs = Array.from(document.querySelectorAll('.ingredient-step'));\n  const check = checkboxInputs.every(input => input.checked === true);\n  setIsDisable(!check);\n}\n\nfunction saveProcess(ingredientId, recipeId) {\n  const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n  if (!inProgressRecipes) {\n    // localStorage vazio - funciona\n    const newProgressRecipes = {\n      cocktails: {\n        [recipeId]: [ingredientId]\n      }\n    };\n    setInProgressRecipesLocalStorage(newProgressRecipes);\n  } else if (!inProgressRecipes.cocktails) {\n    // localStorage apenas com bebidas -\n    const newProgressRecipes = { ...inProgressRecipes,\n      cocktails: {\n        [recipeId]: [ingredientId]\n      }\n    };\n    setInProgressRecipesLocalStorage(newProgressRecipes);\n  } else if (!inProgressRecipes.cocktails[recipeId]) {\n    // localStorage sem essa receita - funciona\n    const newProgressRecipes = { ...inProgressRecipes,\n      cocktails: { ...inProgressRecipes.cocktails,\n        [recipeId]: [ingredientId]\n      }\n    };\n    setInProgressRecipesLocalStorage(newProgressRecipes);\n  } else {\n    // o id já está salvo\n    const recipeIngredients = inProgressRecipes.cocktails[recipeId];\n    const isIngredientDone = recipeIngredients.some(ingredientNumber => parseInt(ingredientNumber, 10) === ingredientId);\n\n    if (isIngredientDone) {\n      // ingrediente já está salvo\n      const arrayIds = recipeIngredients.filter(ingredientNumber => parseInt(ingredientNumber, 10) !== ingredientId);\n      const newProgressRecipes = { ...inProgressRecipes,\n        cocktails: { ...inProgressRecipes.cocktails,\n          [recipeId]: [...arrayIds]\n        }\n      };\n      setInProgressRecipesLocalStorage(newProgressRecipes);\n    } else {\n      // ingrediente não está salvo\n      const arrayIds = [...recipeIngredients, ingredientId];\n      const newProgressRecipes = { ...inProgressRecipes,\n        cocktails: { ...inProgressRecipes.cocktails,\n          [recipeId]: [...arrayIds]\n        }\n      };\n      setInProgressRecipesLocalStorage(newProgressRecipes);\n    }\n  }\n}\n\nfunction checkIngredient(_ref, setIsDisable, index, id) {\n  let {\n    target\n  } = _ref;\n\n  if (target.checked) {\n    target.parentNode.style = 'text-decoration: line-through';\n  } else {\n    target.parentNode.style = 'text-decoration: none';\n  }\n\n  validateButton(setIsDisable);\n  saveProcess(index, id);\n}\n\nfunction getFavorites(callbackIngredients, callbackFavorite, id) {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (favoriteRecipes !== null && favoriteRecipes.some(recipe => recipe.id === id)) {\n    callbackFavorite(true);\n  }\n\n  const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  console.log(inProgressRecipes);\n  const savedIngredients = inProgressRecipes ? inProgressRecipes.cocktails[id] : [];\n\n  if (savedIngredients) {\n    callbackIngredients(savedIngredients);\n  }\n}\n\nexport default function DrinkByIdInProgress(_ref2) {\n  let {\n    match\n  } = _ref2;\n  const {\n    drinkId: id\n  } = match.params;\n  const [drink, setDrink] = useState({});\n  const [alert, setAlert] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  const [isDisable, setIsDisable] = useState(true);\n  const [ingredientsSaved, setIngredientsSaved] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    getFavorites(setIngredientsSaved, setFavorite, id);\n  }, [id]);\n  const ingredients = Object.keys(drink).filter(ingredient => ingredient.includes('strIngredient')).map(ingredient => drink[ingredient]);\n  const measures = Object.keys(drink).filter(measure => measure.includes('strMeasure')).map(measure => drink[measure]);\n  useEffect(() => {\n    const fetchById = async () => {\n      try {\n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const json = await res.json();\n        const drinkRecipe = json.drinks[0];\n        setDrink(drinkRecipe);\n        return drinkRecipe;\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n\n    fetchById();\n  }, [id]);\n\n  function displayAlert() {\n    const THREE = 3000;\n    setTimeout(() => setAlert(false), THREE);\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 18\n      }\n    }, \"Link copiado!\"));\n  }\n\n  const styles = {\n    checked: {\n      textDecoration: 'line-through'\n    },\n    unchecked: {\n      textDecoration: ''\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, drink.strCategory), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, drink.strDrink), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    alt: drink.strDrink,\n    src: drink.strDrinkThumb,\n    width: \"200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredient-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, ingredients.map((ingredient, i) => ingredient === '' || ingredient === null ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredient-container\",\n    key: `${ingredient}-${i}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    \"data-testid\": `${i}-ingredient-step`,\n    htmlFor: ingredient,\n    style: ingredientsSaved.some(ingredientId => parseInt(ingredientId, 10) === i) ? styles.checked : styles.unchecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onClick: event => checkIngredient(event, setIsDisable, i, id),\n    id: ingredient,\n    type: \"checkbox\",\n    className: \"ingredient-step\",\n    defaultChecked: ingredientsSaved.some(ingredientId => parseInt(ingredientId, 10) === i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }), measures[i] === '' || !measures[i] ? ingredient : `${ingredient} - ${measures[i]}`)))), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, drink.strInstructions), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: () => {\n      copy(`http://localhost:3000/bebidas/${id}`);\n      setAlert(true);\n    },\n    alt: \"share-content\",\n    \"data-testid\": \"share-btn\",\n    src: \"/images/shareIcon.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }), alert && displayAlert(), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"favorite-btn\",\n    onClick: () => handleFavoriteButtonClick(id, drink, favorite, setFavorite),\n    alt: \"heart\",\n    src: favorite ? '/images/blackHeartIcon.svg' : '/images/whiteHeartIcon.svg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: isDisable,\n    onClick: () => history.push('/receitas-feitas'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, \"Finalizar Receita\")));\n}\nDrinkByIdInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      drinkId: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/luigr/repositories/recipes-app/src/pages/DrinkByIdInProgress.jsx"],"names":["React","useEffect","useState","useHistory","PropTypes","copy","setInProgressRecipesLocalStorage","handleFavoriteButtonClick","id","drink","favorite","setFavorite","recipe","type","area","category","strCategory","alcoholicOrNot","strAlcoholic","name","strDrink","image","strDrinkThumb","JSON","parse","localStorage","getItem","setItem","stringify","favoriteDrink","alreadyFavorite","some","favoriteRecipe","idDrink","newFavorites","filter","push","validateButton","setIsDisable","checkboxInputs","Array","from","document","querySelectorAll","check","every","input","checked","saveProcess","ingredientId","recipeId","inProgressRecipes","newProgressRecipes","cocktails","recipeIngredients","isIngredientDone","ingredientNumber","parseInt","arrayIds","checkIngredient","index","target","parentNode","style","getFavorites","callbackIngredients","callbackFavorite","favoriteRecipes","console","log","savedIngredients","DrinkByIdInProgress","match","drinkId","params","setDrink","alert","setAlert","isDisable","ingredientsSaved","setIngredientsSaved","history","ingredients","Object","keys","ingredient","includes","map","measures","measure","fetchById","res","fetch","json","drinkRecipe","drinks","error","displayAlert","THREE","setTimeout","styles","textDecoration","unchecked","i","event","strInstructions","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport '../styles/recommended.css';\nimport setInProgressRecipesLocalStorage from '../helpers/helpers';\n\nfunction handleFavoriteButtonClick(id, drink, favorite, setFavorite) {\n  const recipe = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: drink.strCategory,\n    alcoholicOrNot: drink.strAlcoholic,\n    name: drink.strDrink,\n    image: drink.strDrinkThumb };\n  if (!JSON.parse(localStorage.getItem('favoriteRecipes'))\n    || JSON.parse(localStorage.getItem('favoriteRecipes')) === 0) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([recipe]));\n  } else {\n    const favoriteDrink = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const alreadyFavorite = favoriteDrink.some(\n      (favoriteRecipe) => favoriteRecipe.id === drink.idDrink,\n    );\n    if (alreadyFavorite) {\n      const newFavorites = favoriteDrink.filter(\n        (favoriteRecipe) => favoriteRecipe.id !== drink.idDrink,\n      );\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    } else {\n      favoriteDrink.push(recipe);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteDrink));\n    }\n  }\n  if (favorite === true) {\n    return setFavorite(false);\n  }\n  setFavorite(true);\n}\n\nfunction validateButton(setIsDisable) {\n  const checkboxInputs = Array.from(document.querySelectorAll('.ingredient-step'));\n  const check = checkboxInputs.every((input) => input.checked === true);\n  setIsDisable(!check);\n}\n\nfunction saveProcess(ingredientId, recipeId) {\n  const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (!inProgressRecipes) { // localStorage vazio - funciona\n    const newProgressRecipes = {\n      cocktails: { [recipeId]: [ingredientId] },\n    };\n    setInProgressRecipesLocalStorage(newProgressRecipes);\n  } else if (!inProgressRecipes.cocktails) { // localStorage apenas com bebidas -\n    const newProgressRecipes = {\n      ...inProgressRecipes,\n      cocktails: { [recipeId]: [ingredientId] },\n    };\n    setInProgressRecipesLocalStorage(newProgressRecipes);\n  } else if (!inProgressRecipes.cocktails[recipeId]) { // localStorage sem essa receita - funciona\n    const newProgressRecipes = {\n      ...inProgressRecipes,\n      cocktails: {\n        ...inProgressRecipes.cocktails,\n        [recipeId]: [ingredientId],\n      },\n    };\n    setInProgressRecipesLocalStorage(newProgressRecipes);\n  } else { // o id já está salvo\n    const recipeIngredients = inProgressRecipes.cocktails[recipeId];\n    const isIngredientDone = recipeIngredients\n      .some((ingredientNumber) => parseInt(ingredientNumber, 10) === ingredientId);\n    if (isIngredientDone) { // ingrediente já está salvo\n      const arrayIds = recipeIngredients\n        .filter((ingredientNumber) => parseInt(ingredientNumber, 10) !== ingredientId);\n      const newProgressRecipes = {\n        ...inProgressRecipes,\n        cocktails: { ...inProgressRecipes.cocktails, [recipeId]: [...arrayIds] },\n      };\n      setInProgressRecipesLocalStorage(newProgressRecipes);\n    } else { // ingrediente não está salvo\n      const arrayIds = [...recipeIngredients, ingredientId];\n      const newProgressRecipes = {\n        ...inProgressRecipes,\n        cocktails: {\n          ...inProgressRecipes.cocktails,\n          [recipeId]: [...arrayIds],\n        },\n      };\n      setInProgressRecipesLocalStorage(newProgressRecipes);\n    }\n  }\n}\n\nfunction checkIngredient({ target }, setIsDisable, index, id) {\n  if (target.checked) {\n    target.parentNode.style = 'text-decoration: line-through';\n  } else {\n    target.parentNode.style = 'text-decoration: none';\n  }\n  validateButton(setIsDisable);\n  saveProcess(index, id);\n}\n\nfunction getFavorites(callbackIngredients, callbackFavorite, id) {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favoriteRecipes !== null && favoriteRecipes.some((recipe) => recipe.id === id)) {\n    callbackFavorite(true);\n  }\n  const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  console.log(inProgressRecipes);\n  const savedIngredients = inProgressRecipes ? inProgressRecipes.cocktails[id] : [];\n  if (savedIngredients) {\n    callbackIngredients(savedIngredients);\n  }\n}\n\nexport default function DrinkByIdInProgress({ match }) {\n  const { drinkId: id } = match.params;\n  const [drink, setDrink] = useState({});\n  const [alert, setAlert] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  const [isDisable, setIsDisable] = useState(true);\n  const [ingredientsSaved,\n    setIngredientsSaved] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    getFavorites(setIngredientsSaved, setFavorite, id);\n  }, [id]);\n\n  const ingredients = Object.keys(drink)\n    .filter((ingredient) => ingredient.includes('strIngredient'))\n    .map((ingredient) => drink[ingredient]);\n\n  const measures = Object.keys(drink)\n    .filter((measure) => measure.includes('strMeasure'))\n    .map((measure) => drink[measure]);\n\n  useEffect(() => {\n    const fetchById = async () => {\n      try {\n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const json = await res.json();\n        const drinkRecipe = json.drinks[0];\n        setDrink(drinkRecipe);\n        return drinkRecipe;\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n    fetchById();\n  }, [id]);\n\n  function displayAlert() {\n    const THREE = 3000;\n    setTimeout(() => setAlert(false), THREE);\n    return <span><i>Link copiado!</i></span>;\n  }\n\n  const styles = {\n    checked: { textDecoration: 'line-through' },\n    unchecked: { textDecoration: '' },\n  };\n\n  return (\n    <div className=\"page-container\">\n      <div>\n        <h2 data-testid=\"recipe-category\">{drink.strCategory}</h2>\n        <h2 data-testid=\"recipe-title\">{drink.strDrink}</h2>\n        <img\n          data-testid=\"recipe-photo\"\n          alt={ drink.strDrink }\n          src={ drink.strDrinkThumb }\n          width=\"200\"\n        />\n        <div className=\"ingredient-list\">\n          {ingredients.map((ingredient, i) => (\n            (ingredient === '' || ingredient === null)\n              ? null\n              : (\n                <div className=\"ingredient-container\" key={ `${ingredient}-${i}` }>\n                  <label\n                    data-testid={ `${i}-ingredient-step` }\n                    htmlFor={ ingredient }\n                    style={ ingredientsSaved\n                      .some((ingredientId) => parseInt(ingredientId, 10) === i)\n                      ? styles.checked : styles.unchecked }\n                  >\n                    <input\n                      onClick={ (event) => checkIngredient(event, setIsDisable, i, id) }\n                      id={ ingredient }\n                      type=\"checkbox\"\n                      className=\"ingredient-step\"\n                      defaultChecked={ ingredientsSaved\n                        .some((ingredientId) => parseInt(ingredientId, 10) === i) }\n                    />\n                    {\n                      (measures[i] === '' || !measures[i])\n                        ? ingredient\n                        : `${ingredient} - ${measures[i]}`\n                    }\n                  </label>\n                </div>\n              )\n          ))}\n        </div>\n        <div data-testid=\"instructions\">{drink.strInstructions}</div>\n        <input\n          type=\"image\"\n          onClick={ () => {\n            copy(`http://localhost:3000/bebidas/${id}`);\n            setAlert(true);\n          } }\n          alt=\"share-content\"\n          data-testid=\"share-btn\"\n          src=\"/images/shareIcon.svg\"\n        />\n        {alert && displayAlert()}\n        <input\n          type=\"image\"\n          data-testid=\"favorite-btn\"\n          onClick={ () => handleFavoriteButtonClick(id, drink, favorite, setFavorite) }\n          alt=\"heart\"\n          src={\n            favorite ? '/images/blackHeartIcon.svg' : '/images/whiteHeartIcon.svg'\n          }\n        />\n        <button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ isDisable }\n          onClick={ () => history.push('/receitas-feitas') }\n        >\n          Finalizar Receita\n        </button>\n      </div>\n    </div>\n  );\n}\n\nDrinkByIdInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      drinkId: PropTypes.string,\n    }),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}